# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

before_all do
  Dotenv.overload '.env.info'
end


default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
    hello
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do |data|
    gradle(task: "clean")

    gradle(task: "assemble",
           flavor: "staging",
           build_type: "Debug")

    commit = last_git_commit
    qa_emails = "#{ENV['FABRIC_QA_EMAILS']}"
    crashlytics(api_token: data[:api_token],
                build_secret: data[:build_secret],
                emails: qa_emails,
                notes: commit[:message])

  end

  desc "Notify CW when deploy successful"
  lane :notify_beta do |data|
    commit = last_git_commit
    room_id = "#{ENV['ROOM_ID']}"

    message = %Q(#{ENV['QA_MEMBERS']}
  The latest code was deployed into Fabric (F)(F)(beer)
  - Commit:  #{commit[:abbreviated_commit_hash]} -> #{commit[:message]})

    chatwork(roomid: room_id,
             api_token: data[:cw_api_token],
             message: message)
  end

  desc "Notify CW when build success"
  lane :notify_build_success do |data|
    commit = last_git_commit
    room_id = "#{ENV['ROOM_ID']}"
    puts room_id

    message = %Q(#{ENV['DEV_MEMBERS']}
  Your pull request is successful (F)(F)(F)
  ---> Click here for more detail: #{data[:circle_build_url]}
  - Branch:  #{data[:circle_branch]}
  - Commit:  #{commit[:message]}  - Pull request: #{data[:circle_pull_request]})

    chatwork(roomid: room_id,
             api_token: data[:cw_api_token],
             message: message,
             success: true)
  end

  desc "Notify CW when build failure"
  lane :notify_build_failed do |data|
    commit = last_git_commit
    room_id = "#{ENV['ROOM_ID']}"

    message = %Q(#{ENV['DEV_MEMBERS']}
  Your pull request is failure (error)
  ---> Click here for more detail: #{data[:circle_build_url]}
  - Branch:  #{data[:circle_branch]}
  - Commit:  #{commit[:message]}  - Pull request: #{data[:circle_pull_request]})

    chatwork(roomid: room_id,
             api_token: data[:cw_api_token],
             message: message,
             success: false)
    end

end


